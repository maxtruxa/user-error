extends: 'eslint:recommended'
root: true

env:
  node: true
  es6: true

rules:
  # Possible Errors
  # http://eslint.org/docs/rules/#possible-errors
  valid-jsdoc: ['error', {
    'prefer': {
      'class': 'constructor',
      'argument': 'arg',
      'param': 'arg',
      'return': 'returns'
    },
    'preferType': {
      'Boolean': 'boolean',
      'String': 'string',
      'Object': 'object',
      'Number': 'number'
    }
  }]

  # Best Practices
  # http://eslint.org/docs/rules/#best-practices
  accessor-pairs: 'error'
  array-callback-return: 'error'
  block-scoped-var: 'error'
  curly: 'error'
  dot-location: ['error', 'property']
  eqeqeq: 'error'
  no-alert: 'error'
  no-div-regex: 'error'
  no-else-return: 'error'
  no-eq-null: 'error'
  no-eval: 'error'
  no-extend-native: 'error'
  no-extra-bind: 'error'
  no-fallthrough: ['error', 'commentPattern': 'fallthrough']
  no-implied-eval: 'error'
  no-labels: 'error'
  no-lone-blocks: 'error'
  no-loop-func: 'error'
  no-multi-str: 'error'
  no-new: 'error'
  no-new-func: 'error'
  no-new-wrappers: 'error'
  no-octal-escape: 'error'
  no-proto: 'error'
  no-return-assign: 'error'
  no-return-await: 'error'
  no-self-compare: 'error'
  no-sequences: 'error'
  no-throw-literal: 'error'
  no-unmodified-loop-condition: 'error'
  no-unused-expressions: 'error'
  no-useless-call: 'error'
  no-useless-concat: 'error'
  no-warning-comments: ['error', {
    'terms': ['todo']
  }]
  no-with: 'error'
  prefer-promise-reject-errors: 'error'
  radix: 'error'
  require-await: 'error'
  #vars-on-top: 'error'
  wrap-iife: ['error', 'inside']
  yoda: 'error'

  # Strict Mode
  # http://eslint.org/docs/rules/#strict-mode
  strict: ['error', 'safe']

  # Variables
  # http://eslint.org/docs/rules/#variables
  no-shadow: ['error', {'builtinGlobals': true}]
  no-shadow-restricted-names: 'error'
  no-undef-init: 'error'
  no-unused-vars: ['error', {'argsIgnorePattern': '^_'}]
  no-use-before-define: 'error'

  # Node.js and CommonJS
  # http://eslint.org/docs/rules/#nodejs-and-commonjs
  global-require: 'error'
  handle-callback-err: 'error'
  no-buffer-constructor: 'error'
  no-mixed-requires: 'error'
  no-new-require: 'error'
  no-path-concat: 'error'
  no-process-env: 'error'
  no-process-exit: 'error'

  # Stylistic Issues
  # http://eslint.org/docs/rules/#stylistic-issues
  array-bracket-newline: ['error', 'consistent']
  array-bracket-spacing: ['error', 'never']
  array-element-newline: ['error', 'consistent']
  block-spacing: ['error', 'always']
  brace-style: ['error', '1tbs']
  #brace-style: ['error', '1tbs', {'allowSingleLine': true}]
  camelcase: ['error', {'properties': 'never'}]
  comma-dangle: ['error', 'only-multiline']
  comma-spacing: 'error'
  comma-style: 'error'
  computed-property-spacing: 'error'
  consistent-this: ['error', 'self']
  eol-last: 'error'
  func-call-spacing: 'error'
  func-style: ['error', 'declaration']
  implicit-arrow-linebreak: 'error'
  indent: ['error', 2, {'SwitchCase': 1}]
  key-spacing: 'error'
  keyword-spacing: 'error'
  linebreak-style: ['error', 'unix']
  max-depth: ['error', 4]
  max-len: ['error', 80, 2, {'ignoreUrls': true}]
  new-cap: 'error'
  new-parens: 'error'
  newline-per-chained-call: 'error'
  no-array-constructor: 'error'
  no-lonely-if: 'error'
  no-multi-assign: 'error'
  no-multiple-empty-lines: ['error', {
    'max': 2,
    'maxEOF': 1,
    'maxBOF': 0
  }]
  no-negated-condition: 'error'
  no-nested-ternary: 'error'
  no-new-object: 'error'
  no-tabs: 'error'
  no-trailing-spaces: 'error'
  no-unneeded-ternary: 'error'
  no-whitespace-before-property: 'error'
  object-curly-newline: ['error', {'consistent': true}]
  object-curly-spacing: ['error', 'never']
  #object-property-newline: ['error', ?]
  one-var: ['error', 'never']
  one-var-declaration-per-line: 'error'
  operator-assignment: ['error', 'always']
  operator-linebreak: 'error'
  padded-blocks: ['error', 'never']
  #quote-props: ['error', 'consistent']
  quotes: ['error', 'single', {'avoidEscape': true}]
  semi: 'error'
  semi-spacing: 'error'
  semi-style: 'error'
  space-before-blocks: 'error'
  space-before-function-paren: ['error', 'never']
  space-in-parens: 'error'
  space-infix-ops: 'error'
  space-unary-ops: 'error'
  #spaced-comment: ['error', 'always', {'exceptions': ['*']}]
  switch-colon-spacing: 'error'
  template-tag-spacing: 'error'
  unicode-bom: 'error'

  # ECMAScript 6
  # http://eslint.org/docs/rules/#ecmascript-6
  #arrow-body-style: 'error'
  #arrow-parens: 'error'
  arrow-spacing: 'error'
  generator-star-spacing: 'error'
  no-confusing-arrow: ['error', {'allowParens': true}]
  no-duplicate-imports: 'error'
  no-useless-computed-key: 'error'
  no-useless-rename: 'error'
  no-var: 'error'
  object-shorthand: 'error'
  prefer-numeric-literals: 'error'
  prefer-rest-params: 'error'
  prefer-spread: 'error'
  #prefer-template: 'error'
  rest-spread-spacing: 'error'
  template-curly-spacing: 'error'
  yield-star-spacing: 'error'

